{
	"name": "emittery",
	"version": "0.4.1",
	"description": "Simple and modern async event emitter",
	"license": "MIT",
	"repository": "sindresorhus/emittery",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "sindresorhus.com"
	},
	"engines": {
		"node": ">=6"
	},
	"scripts": {
		"build": "babel --out-file=legacy.js index.js",
		"build:watch": "npm run build -- --watch",
		"prepare": "npm run build",
		"test": "xo && tsc --noEmit && nyc ava"
	},
	"files": [
		"Emittery.d.ts",
		"index.js",
		"legacy.js",
		"legacy.d.ts"
	],
	"keywords": [
		"event",
		"emitter",
		"eventemitter",
		"events",
		"async",
		"emit",
		"on",
		"once",
		"off",
		"listener",
		"subscribe",
		"unsubscribe",
		"pubsub",
		"tiny",
		"addlistener",
		"addeventlistener",
		"dispatch",
		"dispatcher",
		"observer",
		"trigger",
		"await",
		"promise"
	],
	"devDependencies": {
		"@sindresorhus/tsconfig": "^0.1.0",
		"@types/node": "^10.12.10",
		"ava": "^0.25.0",
		"babel-cli": "^6.26.0",
		"babel-core": "^6.26.3",
		"babel-plugin-transform-async-to-generator": "^6.24.1",
		"codecov": "^3.1.0",
		"delay": "^4.1.0",
		"glob": "^7.1.3",
		"nyc": "^13.1.0",
		"ts-node": "^7.0.1",
		"typescript": "^3.2.1",
		"xo": "^0.23.0"
	},
	"types": "Emittery.d.ts",
	"nyc": {
		"reporter": [
			"html",
			"lcov",
			"text"
		]
	}
}
